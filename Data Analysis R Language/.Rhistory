#library for manipulating data
library(tidyverse)
#library for plotting
library(ggplot2)
library(ggrepel)
theme_set(theme_bw())
data = read.csv("production_expectation_experiment-trials-processed.csv")
data = data %>%
mutate(scale = case_when(
slider_0 == "It is warm" ~ "scalding, hot, warm",
slider_0 == "He is a good student" ~ "perfect, excellent, good",
slider_0 == "They are cleanish" ~ "spotless, clean, cleanish"
))
data_long = data %>%
# We first select the fields we actually need.
# In this case, workerid, three of four responses, and three or four sliders,
# the scale, and the scale value.
dplyr::select(workerid, response_0, response_1, response_2,
response_3, rt, slider_0, slider_1, slider_2,
slider_3, scale_value, scale) %>%
# The pivor_longet command takes the table, looks for columns starting with 'response' or
# with 'slider' and extracts the matching response and slider values
tidyr::pivot_longer(cols=matches("response_|slider_"),
names_to=c(".value", "slider"),
names_pattern="(response_|slider_)(.)",
values_drop_na=TRUE) %>%
# Finally, we rename the new fields response_ and slider_
dplyr::rename(response = response_,
utterance = slider_)
View(data_long)
data_int = read.csv("interpretation_experiment-trials-processed.csv")
data_int = data_int %>%
mutate(scale = case_when(
scale_value %in% c("warm", "hot", "scalding") ~ "scalding, hot, warm",
scale_value %in% c("good", "excellent", "perfect")  ~ "perfect, excellent, good",
scale_value %in% c("cleanish", "clean", "spotless")  ~ "spotless, clean, cleanish"
))
data_long_int = data_int %>%
# We first select the fields we actually need.
# In this case, workerid, three of four responses, and three or four sliders,
# the scale, and the scale value.
dplyr::select(workerid, response_0, response_1, response_2,
response_3, response_4, response_5, response_6, response_7, response_8,
rt,  scale_value, scale) %>%
dplyr::rename(utterance = scale_value) %>%
# The pivor_longet command takes the table, looks for columns starting with 'response' or
# with 'slider' and extracts the matching response and slider values
tidyr::pivot_longer(cols=matches("response_"),
names_to=c("scale_value"),
names_pattern="response_(.)",
values_drop_na=TRUE) %>%
dplyr::mutate(scale_value = as.numeric(scale_value) + 1) %>%
dplyr::rename(response = value)
View(data_long)
View(data_long_int)
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_long %>%
dplyr::group_by(scale_value, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
ggplot(aes(x=scale_value, y=response, col=slider)) + geom_line() + facet_wrap(~scale, ncol = 3, scales = "free_x") +
theme(legend.position = "none") +
geom_text_repel(
aes(label = utterance), data = data_ends,
fontface ="plain", size = 3
) + scale_x_continuous(n.breaks = 9)
View(data_ends)
View(data_long)
View(data_long_int)
View(data_long_int)
#library for manipulating data
library(tidyverse)
#library for plotting
library(ggplot2)
library(ggrepel)
theme_set(theme_bw())
data = read.csv("production_expectation_experiment-trials-processed.csv")
data = data %>%
mutate(scale = case_when(
slider_0 == "It is warm" ~ "scalding, hot, warm",
slider_0 == "He is a good student" ~ "perfect, excellent, good",
slider_0 == "They are cleanish" ~ "spotless, clean, cleanish"
))
data_long = data %>%
# We first select the fields we actually need.
# In this case, workerid, three of four responses, and three or four sliders,
# the scale, and the scale value.
dplyr::select(workerid, response_0, response_1, response_2,
response_3, rt, slider_0, slider_1, slider_2,
slider_3, scale_value, scale) %>%
# The pivor_longet command takes the table, looks for columns starting with 'response' or
# with 'slider' and extracts the matching response and slider values
tidyr::pivot_longer(cols=matches("response_|slider_"),
names_to=c(".value", "slider"),
names_pattern="(response_|slider_)(.)",
values_drop_na=TRUE) %>%
# Finally, we rename the new fields response_ and slider_
dplyr::rename(response = response_,
utterance = slider_)
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_long %>%
dplyr::group_by(scale_value, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
ggplot(aes(x=scale_value, y=response, col=slider)) + geom_line() + facet_wrap(~scale, ncol = 3, scales = "free_x") +
theme(legend.position = "none") +
geom_text_repel(
aes(label = utterance), data = data_ends,
fontface ="plain", size = 3
) + scale_x_continuous(n.breaks = 9)
data_int = read.csv("interpretation_experiment-trials-processed.csv")
data_int = data_int %>%
mutate(scale = case_when(
scale_value %in% c("warm", "hot", "scalding") ~ "scalding, hot, warm",
scale_value %in% c("good", "excellent", "perfect")  ~ "perfect, excellent, good",
scale_value %in% c("cleanish", "clean", "spotless")  ~ "spotless, clean, cleanish"
))
data_long_int = data_int %>%
# We first select the fields we actually need.
# In this case, workerid, three of four responses, and three or four sliders,
# the scale, and the scale value.
dplyr::select(workerid, response_0, response_1, response_2,
response_3, response_4, response_5, response_6, response_7, response_8,
rt,  scale_value, scale) %>%
dplyr::rename(utterance = scale_value) %>%
# The pivor_longet command takes the table, looks for columns starting with 'response' or
# with 'slider' and extracts the matching response and slider values
tidyr::pivot_longer(cols=matches("response_"),
names_to=c("scale_value"),
names_pattern="response_(.)",
values_drop_na=TRUE) %>%
dplyr::mutate(scale_value = as.numeric(scale_value) + 1) %>%
dplyr::rename(response = value)
View(data_long_int)
data_ends_int = data_long_int %>%
dplyr::group_by(scale_value, utterance, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response == max(response), scale_value == max(scale_value))
View(data_ends_int)
data_ends_int = data_long_int %>%
dplyr::group_by(scale_value, utterance, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
data_ends_int = data_long_int %>%
dplyr::group_by(scale_value, utterance, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, scale) %>%
dplyr::filter(scale_value == max(scale_value))
View(data_ends_int)
data = read.csv("production_expectation_experiment-trials-processed.csv")
data = data %>%
mutate(scale = case_when(
slider_0 == "It is warm" ~ "scalding, hot, warm",
slider_0 == "He is a good student" ~ "perfect, excellent, good",
slider_0 == "They are cleanish" ~ "spotless, clean, cleanish"
))
data_long = data %>%
# We first select the fields we actually need.
# In this case, workerid, three of four responses, and three or four sliders,
# the scale, and the scale value.
dplyr::select(workerid, response_0, response_1, response_2,
response_3, rt, slider_0, slider_1, slider_2,
slider_3, scale_value, scale) %>%
# The pivor_longet command takes the table, looks for columns starting with 'response' or
# with 'slider' and extracts the matching response and slider values
tidyr::pivot_longer(cols=matches("response_|slider_"),
names_to=c(".value", "slider"),
names_pattern="(response_|slider_)(.)",
values_drop_na=TRUE) %>%
# Finally, we rename the new fields response_ and slider_
dplyr::rename(response = response_,
utterance = slider_)
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_long %>%
dplyr::group_by(scale_value, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
ggplot(aes(x=scale_value, y=response, col=slider)) + geom_line() + facet_wrap(~scale, ncol = 3, scales = "free_x") +
theme(legend.position = "none") +
geom_text_repel(
aes(label = utterance), data = data_ends,
fontface ="plain", size = 3
) + scale_x_continuous(n.breaks = 9)
View(data_ends)
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response))
View(data_ends)
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_trials_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_trials_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response))
View(data_trials_ends)
View(data_ends)
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_trials_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::filter(scale_value == max(scale_value))
View(data_ends)
View(data_trials_ends)
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_trials_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value))
View(data_ends)
View(data_trials_ends)
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_trials_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value))
View(data_ends)
View(data_trials_ends)
data_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response)) %>%
dplyr::group_by(utterance, slider, scale) %>%
dplyr::filter(scale_value == max(scale_value)) %>%
dplyr::summarize(response = max(response), scale_value = max(scale_value)) %>%
mutate(utterance = str_replace_all(utterance, "</?em>", ""))
data_trials_ends = data_long %>%
dplyr::group_by(scale_value, utterance, slider, scale) %>%
dplyr::summarize(response = mean(response))
View(data_ends)
View(data_trials_ends)
View(data_ends_int)
